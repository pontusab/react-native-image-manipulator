{"version":3,"file":"ImageManipulator.js","sourceRoot":"","sources":["../src/ImageManipulator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,EAGL,UAAU,EAEX,MAAM,0BAA0B,CAAC;AAElC,MAAM,EAAE,gBAAgB,EAAE,GAAG,aAAa,CAAC;AAE3C,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,GAAW,EACX,UAAoB,EAAE,EACtB,EAAE,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,IAAI,KAAkB,EAAE;IAEvD,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;IACD,IAAI,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE;QAC9B,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;KAC5D;IACD,OAAO,MAAM,gBAAgB,CAAC,eAAe,CAAC,GAAG,EAAE,OAAO,EAAE;QAC1D,MAAM;QACN,GAAG,IAAI;KACR,CAAC,CAAC;AACL,CAAC;AAED,cAAc,0BAA0B,CAAC;AACzC,eAAe,eAAe,CAAC","sourcesContent":["import { NativeModules } from 'react-native';\nimport {\n  Action,\n  ImageResult,\n  SaveFormat,\n  SaveOptions\n} from './ImageManipulator.types';\n\nconst { ImageManipulator } = NativeModules;\n\nexport async function manipulateAsync(\n  uri: string,\n  actions: Action[] = [],\n  { format = SaveFormat.JPEG, ...rest }: SaveOptions = {}\n): Promise<ImageResult> {\n  if (!ImageManipulator.manipulateAsync) {\n    throw new Error('ImageManipulator not available');\n  }\n  if (!(typeof uri === 'string')) {\n    throw new TypeError('The \"uri\" argument must be a string');\n  }\n  return await ImageManipulator.manipulateAsync(uri, actions, {\n    format,\n    ...rest\n  });\n}\n\nexport * from './ImageManipulator.types';\nexport default manipulateAsync;\n"]}